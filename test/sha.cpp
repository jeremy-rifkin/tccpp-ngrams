#include <vector>

#include "utils.hpp"
#include "utils/sha.hpp"

#include <libassert/assert-gtest.hpp>

int x = [] {
    libassert::set_fixed_literal_format(libassert::literal_format::integer_hex);
    return 0;
} ();

TEST(Sha, OneGram) {
    auto hash = sha256(ngram<1>{"foo"}, "nonce");
    sha256_digest expected{
        0xcb, 0x9a, 0xab, 0x80, 0xf2, 0xf6, 0x9b, 0xf2, 0x54, 0xf6, 0xfb, 0x2e, 0xa5, 0x82, 0x02, 0xa3,
        0x46, 0x83, 0xeb, 0x66, 0x2f, 0x53, 0x9b, 0xfa, 0x1b, 0x73, 0x13, 0xf0, 0x77, 0xcd, 0x3b, 0x5e
    };
    ASSERT(hash == expected);
}

TEST(Sha, TwoGram) {
    auto hash = sha256(ngram<2>{"foo", "bar"}, "nonce");
    sha256_digest expected{
        0xd5, 0x55, 0x3e, 0xec, 0x38, 0x23, 0x6f, 0x4b, 0xf3, 0xb5, 0x8b, 0x15, 0xdd, 0x2a, 0x53, 0xdd,
        0x66, 0x52, 0x3f, 0x05, 0x91, 0x49, 0xef, 0x0c, 0x50, 0x08, 0x82, 0xbe, 0xc9, 0x3d, 0xe0, 0x75
    };
    ASSERT(hash == expected);
}
